```plaintext
💻 **PROMPT PARA REPLIT AI** 💻  
**Crea un sistema de gestión de inventario para una tienda de renta/venta de vestidos**  

---

### **INSTRUCCIONES** 🚨  
1. **Tecnologías**: Usa PHP, SQLite, JavaScript, HTML5, CSS3 y Bootstrap 5 (CDNs).  
2. **Optimización**: Todo en un solo Replit (1 token). Usa `index.php` modular con `include_once`.  
3. **Facturación**: Genera facturas con el formato exacto proporcionado (RFC, dirección, horarios, campos obligatorios).  
4. **Prioridades**:  
   - Registro de horarios de entrega/devolución.  
   - Alertas de stock bajo (<5 unidades) y notificaciones en tiempo real.  
   - CRUD completo para productos/ventas.  

---

### **CONTEXTO** 🎯  
**Necesidad**: La boutique "Violett à" requiere un sistema para:  
- Gestionar inventario de vestidos (renta/venta).  
- Registrar transacciones con datos específicos:  
  - Fechas de entrega/devolución.  
  - Costos de renta/venta.  
  - Datos fiscales (RFC, dirección, folio único).  
- Generar facturas legales con la estructura proporcionada.  

**Datos clave de la factura**:  
```text  
EMPRESA: Violett à | RFC: GASP87112716A  
DIRECCIÓN: Calle Niños Héroes 89, Col. Bellavista, CP 60050 Uruapan, Mich.  
HORARIO: Lunes-Viernes (11:00-14:00 / 16:00-20:00), Sábado (11:00-13:00)  
CAMPOS OBLIGATORIOS: Folio, Fechas, Nombre, Domicilio, Teléfono, Cantidad, Descripción, Importe Total.  
```  

---

### **DATOS DE ENTRADA** 📥  
1. **Productos**:  
   - Código único, nombre, descripción, precio de venta/renta, stock.  
2. **Transacciones**:  
   - Tipo (renta/venta), fechas de entrega/devolución, cliente (nombre, domicilio, teléfono).  
3. **Validaciones**:  
   - JS: Campos vacíos, formato de teléfono, fechas coherentes.  
   - PHP: Evitar duplicados en códigos de producto.  
4. **Base de Datos**:  
   ```sql  
   -- Tablas REQUERIDAS  
   CREATE TABLE productos (  
       id INTEGER PRIMARY KEY,  
       codigo TEXT UNIQUE,  
       nombre TEXT,  
       tipo TEXT CHECK(tipo IN ('renta', 'venta')),  
       precio DECIMAL(10,2),  
       stock INTEGER  
   );  

   CREATE TABLE transacciones (  
       folio TEXT PRIMARY KEY,  
       id_producto INTEGER,  
       fecha_entrega DATE,  
       fecha_devolucion DATE,  
       cliente_nombre TEXT,  
       cliente_domicilio TEXT,  
       cliente_telefono TEXT,  
       abono DECIMAL(10,2),  
       total DECIMAL(10,2),  
       FOREIGN KEY(id_producto) REFERENCES productos(id)  
   );  
   ```  

---

### **INDICADOR DE SALIDA** 🎯  
**Entregar un sistema web con**:  
1. **Páginas HTML (10/10)**:  
   - Inicio, Login/Registro, Dashboard (vendedor/admin), CRUD, Reportes, Acerca de, Contacto, Ayuda.  
2. **Diseño CSS (10/10)**:  
   - Bootstrap 5 + `styles.css` para colores corporativos (#6A1B9A para detalles).  
   - Menú responsive con íconos de Bootstrap Icons.  
3. **CRUD (20/20)**:  
   - Create: Formulario de productos/ventas con validación JS/PHP.  
   - Read: Tablas con DataTables (CDN) y 5 reportes (JSON/Excel).  
   - Update/Delete: Edición con datos precargados + eliminación suave (SweetAlert2).  
4. **Autenticación (5/5)**:  
   - Registro con hash de contraseña + sesiones PHP para roles (vendedor vs admin).  
5. **Factura PDF (Extra)**:  
   - Generar factura en formato exacto usando `fpdf` o HTML2PDF.  
   ```php  
   // Ejemplo de generación de folio único  
   $folio = "VIO-" . strtoupper(uniqid());  
   ```  

---

### **CÓDIGO INICIAL (index.php)** 🖥️  
```php  
<?php  
session_start();  
$db = new PDO('sqlite:database.db');  

// Autenticación  
if (!isset($_SESSION['user_id']) && basename($_SERVER['PHP_SELF']) != 'login.php') {  
    header('Location: ?page=login');  
}  

// Lógica modular  
$page = $_GET['page'] ?? 'inicio';  
include_once "paginas/$page.php";  
?>  
```  

**¡Entrega un sistema que cumpla al 100% con la rubrica técnica!** 🔥  
```